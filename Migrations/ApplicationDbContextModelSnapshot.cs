// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportsBettingTracker.Data;

#nullable disable

namespace SportsBettingTracker.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SportsBettingTracker.Models.Bet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AmountWonLost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("BetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BetSelection")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Match")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Odds")
                        .HasColumnType("int");

                    b.Property<int>("Result")
                        .HasColumnType("int");

                    b.Property<int>("SportLeagueId")
                        .HasColumnType("int");

                    b.Property<decimal>("Stake")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("SportLeagueId");

                    b.ToTable("Bets");
                });

            modelBuilder.Entity("SportsBettingTracker.Models.SportLeague", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("SportLeagues");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "NFL"
                        },
                        new
                        {
                            Id = 2,
                            Name = "NBA"
                        },
                        new
                        {
                            Id = 3,
                            Name = "MLB"
                        },
                        new
                        {
                            Id = 4,
                            Name = "NHL"
                        },
                        new
                        {
                            Id = 5,
                            Name = "UFC"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Soccer - Premier League"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Soccer - MLS"
                        });
                });

            modelBuilder.Entity("SportsBettingTracker.Models.Bet", b =>
                {
                    b.HasOne("SportsBettingTracker.Models.SportLeague", "SportLeague")
                        .WithMany("Bets")
                        .HasForeignKey("SportLeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SportLeague");
                });

            modelBuilder.Entity("SportsBettingTracker.Models.SportLeague", b =>
                {
                    b.Navigation("Bets");
                });
#pragma warning restore 612, 618
        }
    }
}
