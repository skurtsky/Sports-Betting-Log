@model SportsBettingTracker.ViewModels.PaginatedList<SportsBettingTracker.Models.Bet>

@{
    ViewData["Title"] = "Bets";
}

<div class="container">    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Bets</h1>
        <div>
            <div class="btn-group me-2">
                <a asp-action="Create" class="btn btn-primary"><i class="bi bi-plus"></i> Add Bet</a>
                <button type="button" class="btn btn-primary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
                    <span class="visually-hidden">Toggle Dropdown</span>
                </button>
                <ul class="dropdown-menu dropdown-menu-end">
                    <li><a class="dropdown-item" asp-action="ImportCsv">Import from CSV</a></li>
                </ul>
            </div>
            <div class="btn-group">
                <a asp-action="ExportCsv" class="btn btn-outline-secondary">Export</a>
            </div>
        </div>    </div>

    <!-- Bulk Action Buttons -->
    <div class="bulk-actions mb-3 d-none">
        <div class="btn-group">
            <button type="button" class="btn btn-outline-primary bulk-edit">Edit Selected</button>
            <button type="button" class="btn btn-outline-danger bulk-delete">Delete Selected</button>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col">
            <form method="get" id="filterForm" class="row g-3">
                <div class="col-md-2">
                    <label class="form-label">Date Range</label>
                    <select name="dateFilter" class="form-select" onchange="this.form.submit()">
                        <option value="">All Time</option>
                        <option value="today" selected="@(ViewData["DateFilter"]?.ToString() == "today")">Today</option>
                        <option value="yesterday" selected="@(ViewData["DateFilter"]?.ToString() == "yesterday")">Yesterday</option>
                        <option value="last7days" selected="@(ViewData["DateFilter"]?.ToString() == "last7days")">Last 7 Days</option>
                        <option value="last30days" selected="@(ViewData["DateFilter"]?.ToString() == "last30days")">Last 30 Days</option>
                        <option value="thismonth" selected="@(ViewData["DateFilter"]?.ToString() == "thismonth")">This Month</option>
                        <option value="lastmonth" selected="@(ViewData["DateFilter"]?.ToString() == "lastmonth")">Last Month</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <label class="form-label">Sport/League</label>
                    <select name="sportFilter" class="form-select" onchange="this.form.submit()">
                        <option value="">All</option>
                        @foreach (var league in ViewBag.SportLeagues)
                        {
                            <option value="@league.Id" selected="@(ViewData["SportFilter"]?.ToString() == league.Id.ToString())">
                                @league.Name
                            </option>
                        }
                    </select>
                </div>
                <div class="col-md-2">
                    <label class="form-label">Bet Type</label>
                    <select name="betTypeFilter" class="form-select" onchange="this.form.submit()">
                        <option value="">All</option>
                        @foreach (var betType in Enum.GetValues(typeof(SportsBettingTracker.Models.BetType)))
                        {
                            <option value="@betType" selected="@(ViewData["BetTypeFilter"]?.ToString() == betType.ToString())">
                                @betType
                            </option>
                        }
                    </select>
                </div>
                <div class="col-md-2">
                    <label class="form-label">Result</label>
                    <select name="resultFilter" class="form-select" onchange="this.form.submit()">
                        <option value="">All</option>
                        @foreach (var result in Enum.GetValues(typeof(SportsBettingTracker.Models.BetResult)))
                        {
                            <option value="@result" selected="@(ViewData["ResultFilter"]?.ToString() == result.ToString())">
                                @result
                            </option>
                        }
                    </select>
                </div>
                <div class="col-md-2">
                    <label class="form-label">Search</label>
                    <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" class="form-control" placeholder="Search...">
                </div>                <div class="col-md-2">
                    <label class="form-label">Page Size</label>
                    <select name="pageSize" class="form-select" onchange="this.form.submit()">
                        @foreach (var size in (int[])ViewData["PageSizeOptions"])
                        {
                            <option value="@size" selected="@(ViewData["CurrentPageSize"]?.ToString() == size.ToString())">
                                @size items
                            </option>
                        }
                    </select>
                </div>                <div class="col-md-2">
                    <label class="form-label">&nbsp;</label>
                    <button type="button" class="btn btn-outline-secondary w-100" id="clearFilters">Clear Filters</button>
                </div>
                <input type="hidden" name="sortOrder" value="@ViewData["CurrentSort"]" />
            </form>
        </div>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">
            @TempData["Success"]
        </div>
    }
    
    @if (TempData["Warning"] != null)
    {
        <div class="alert alert-warning">
            @TempData["Warning"]
        </div>
    }
    
    @if (TempData["Info"] != null)
    {
        <div class="alert alert-info">
            @TempData["Info"]
        </div>
    }
    
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">
            @TempData["Error"]
        </div>
    }
    
    @if (TempData["Debug"] != null)
    {
        <div class="alert alert-secondary">
            <strong>Debug Info:</strong>
            <div>@TempData["Debug"]</div>
        </div>
    }
    
    @if (TempData["ImportErrors"] != null)
    {
        <div class="alert alert-danger">
            <strong>Import Errors:</strong>
            <div>@Html.Raw(TempData["ImportErrors"])</div>
        </div>
    }

    <div class="card">
        <div class="card-body">
            <form asp-action="Index" method="get" class="mb-4">            <div class="input-group">
                    <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" class="form-control" placeholder="Search by match, bet selection or sport...">
                    <button type="submit" class="btn btn-outline-secondary">Search</button>
                    @if (ViewData["CurrentFilter"]?.ToString() != null)
                    {
                        <a asp-action="Index" class="btn btn-outline-secondary">Clear</a>
                    }
                </div>
            </form>
            
            @Html.AntiForgeryToken()
            
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>
                                <div class="form-check">
                                    <input class="form-check-input select-all" type="checkbox">
                                </div>
                            </th>                            <th>
                                <a asp-action="Index" 
                                   asp-route-sortOrder="@ViewData["DateSortParm"]"
                                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                   asp-route-dateFilter="@ViewData["DateFilter"]"
                                   asp-route-sportFilter="@ViewData["SportFilter"]"
                                   asp-route-betTypeFilter="@ViewData["BetTypeFilter"]"
                                   asp-route-resultFilter="@ViewData["ResultFilter"]"
                                   asp-route-pageSize="@ViewData["CurrentPageSize"]">Date</a>
                            </th>
                            <th>
                                <a asp-action="Index" 
                                   asp-route-sortOrder="@ViewData["SportSortParm"]"
                                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                   asp-route-dateFilter="@ViewData["DateFilter"]"
                                   asp-route-sportFilter="@ViewData["SportFilter"]"
                                   asp-route-betTypeFilter="@ViewData["BetTypeFilter"]"
                                   asp-route-resultFilter="@ViewData["ResultFilter"]"
                                   asp-route-pageSize="@ViewData["CurrentPageSize"]">Sport/League</a>
                            </th>
                            <th>
                                <a asp-action="Index" 
                                   asp-route-sortOrder="@ViewData["MatchSortParm"]"
                                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                   asp-route-dateFilter="@ViewData["DateFilter"]"
                                   asp-route-sportFilter="@ViewData["SportFilter"]"
                                   asp-route-betTypeFilter="@ViewData["BetTypeFilter"]"
                                   asp-route-resultFilter="@ViewData["ResultFilter"]"
                                   asp-route-pageSize="@ViewData["CurrentPageSize"]">Match</a>
                            </th>
                            <th>
                                <a asp-action="Index" 
                                   asp-route-sortOrder="@ViewData["SelectionSortParm"]"
                                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                   asp-route-dateFilter="@ViewData["DateFilter"]"
                                   asp-route-sportFilter="@ViewData["SportFilter"]"
                                   asp-route-betTypeFilter="@ViewData["BetTypeFilter"]"
                                   asp-route-resultFilter="@ViewData["ResultFilter"]"
                                   asp-route-pageSize="@ViewData["CurrentPageSize"]">Selection</a>
                            </th>
                            <th>
                                <a asp-action="Index" 
                                   asp-route-sortOrder="@ViewData["StakeSortParm"]"
                                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                   asp-route-dateFilter="@ViewData["DateFilter"]"
                                   asp-route-sportFilter="@ViewData["SportFilter"]"
                                   asp-route-betTypeFilter="@ViewData["BetTypeFilter"]"
                                   asp-route-resultFilter="@ViewData["ResultFilter"]"
                                   asp-route-pageSize="@ViewData["CurrentPageSize"]">Stake</a>
                            </th>
                            <th>
                                <a asp-action="Index" 
                                   asp-route-sortOrder="@ViewData["OddsSortParm"]"
                                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                   asp-route-dateFilter="@ViewData["DateFilter"]"
                                   asp-route-sportFilter="@ViewData["SportFilter"]"
                                   asp-route-betTypeFilter="@ViewData["BetTypeFilter"]"
                                   asp-route-resultFilter="@ViewData["ResultFilter"]"
                                   asp-route-pageSize="@ViewData["CurrentPageSize"]">Odds</a>
                            </th>
                            <th>
                                <a asp-action="Index" 
                                   asp-route-sortOrder="@ViewData["ResultSortParm"]"
                                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                   asp-route-dateFilter="@ViewData["DateFilter"]"
                                   asp-route-sportFilter="@ViewData["SportFilter"]"
                                   asp-route-betTypeFilter="@ViewData["BetTypeFilter"]"
                                   asp-route-resultFilter="@ViewData["ResultFilter"]"
                                   asp-route-pageSize="@ViewData["CurrentPageSize"]">Result</a>
                            </th>
                            <th>
                                <a asp-action="Index" asp-route-sortOrder="@ViewData["AmountSortParm"]">Amount</a>
                            </th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr data-bet-id="@item.Id">                                <td>
                                    <div class="form-check">
                                        <input class="form-check-input select-bet" type="checkbox" value="@item.Id">
                                    </div>
                                </td>
                                <td class="editable" data-field="BetDate" data-type="date">
                                    <span class="display-value">@item.BetDate.ToShortDateString()</span>
                                    <input type="date" class="form-control edit-control d-none" value="@item.BetDate.ToString("yyyy-MM-dd")" />
                                </td>
                                <td class="editable" data-field="SportLeagueId" data-type="select">
                                    <span class="display-value">@(item.SportLeague?.Name ?? "Unknown")</span>
                                    <select class="form-control edit-control d-none">
                                        @foreach (var sportLeague in ViewBag.SportLeagues)
                                        {
                                            if (item.SportLeagueId == sportLeague.Id)
                                            {
                                                <option value="@sportLeague.Id" selected>@sportLeague.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@sportLeague.Id">@sportLeague.Name</option>
                                            }
                                        }
                                    </select>
                                </td>
                                <td class="editable" data-field="Match" data-type="text">
                                    <span class="display-value">@item.Match</span>
                                    <input type="text" class="form-control edit-control d-none" value="@item.Match" />
                                </td>
                                <td class="editable" data-field="BetSelection" data-type="text">
                                    <span class="display-value">@item.BetSelection</span>
                                    <input type="text" class="form-control edit-control d-none" value="@item.BetSelection" />
                                </td>
                                <td class="editable" data-field="Stake" data-type="number">
                                    <span class="display-value">$@item.Stake.ToString("F2")</span>
                                    <input type="text" class="form-control edit-control d-none" value="@item.Stake.ToString("F2")" />
                                </td>
                                <td class="editable" data-field="Odds" data-type="number">
                                    <span class="display-value">@item.FormattedOdds</span>
                                    <input type="text" class="form-control edit-control d-none" value="@item.Odds" />
                                </td>
                                <td class="editable" data-field="Result" data-type="select">
                                    <span class="badge @(item.Result == SportsBettingTracker.Models.BetResult.WIN ? "bg-success" : 
                                                      item.Result == SportsBettingTracker.Models.BetResult.LOSS ? "bg-danger" :
                                                      item.Result == SportsBettingTracker.Models.BetResult.PUSH ? "bg-secondary" : "bg-warning") display-value">
                                        @item.Result
                                    </span>
                                    <select class="form-control edit-control d-none">
                                        @foreach (var result in Enum.GetValues(typeof(SportsBettingTracker.Models.BetResult)))
                                        {
                                            if (item.Result.ToString() == result.ToString())
                                            {
                                                <option value="@result" selected>@result</option>
                                            }
                                            else
                                            {
                                                <option value="@result">@result</option>
                                            }
                                        }
                                    </select>
                                </td>
                                <td class="amount-won-lost">@item.FormattedAmountWonLost</td>
                                <td>
                                    <div class="btn-group btn-group-sm">
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-primary">Edit</a>
                                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-secondary">Details</a>
                                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger">Delete</a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            
            <div class="d-flex justify-content-between align-items-center mt-3">
                <div>
                    @if (Model.Count > 0)
                    {
                        <span>Showing @Model.FirstItemIndex-@Model.LastItemIndex of @Model.TotalItems items</span>
                    }
                    else
                    {
                        <span>No bets found</span>
                    }
                </div>
                <div>                    <a asp-action="Index"
                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-pageNumber="@(Model.PageIndex - 1)"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       asp-route-dateFilter="@ViewData["DateFilter"]"
                       asp-route-sportFilter="@ViewData["SportFilter"]"
                       asp-route-betTypeFilter="@ViewData["BetTypeFilter"]"
                       asp-route-resultFilter="@ViewData["ResultFilter"]"
                       asp-route-pageSize="@ViewData["CurrentPageSize"]"
                       class="btn btn-outline-secondary @(!Model.HasPreviousPage ? "disabled" : "")">
                        Previous
                    </a>
                    <a asp-action="Index"
                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-pageNumber="@(Model.PageIndex + 1)"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       asp-route-dateFilter="@ViewData["DateFilter"]"
                       asp-route-sportFilter="@ViewData["SportFilter"]"
                       asp-route-betTypeFilter="@ViewData["BetTypeFilter"]"
                       asp-route-resultFilter="@ViewData["ResultFilter"]"
                       asp-route-pageSize="@ViewData["CurrentPageSize"]"
                       class="btn btn-outline-secondary @(!Model.HasNextPage ? "disabled" : "")">
                        Next
                    </a>
                </div>
            </div>        </div>
    </div>
</div>

<!-- Bulk Edit Modal -->
<div class="modal fade" id="bulkEditModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Bulk Edit Bets</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="bulkEditForm">
                    <div class="mb-3">
                        <label class="form-label">Result</label>
                        <select class="form-select" name="Result">
                            <option value="">No Change</option>
                            @foreach (var result in Enum.GetValues(typeof(SportsBettingTracker.Models.BetResult)))
                            {
                                <option value="@result">@result</option>
                            }
                        </select>
                    </div>                    <div class="mb-3">
                        <label class="form-label">Sport/League</label>
                        <select class="form-select" name="SportLeagueId">
                            <option value="">No Change</option>
                            @foreach (var league in ViewBag.SportLeagues)
                            {
                                <option value="@league.Id">@league.Name</option>
                            }
                        </select>
                    </div>                    <div class="mb-3">
                        <label class="form-label">Bet Type</label>
                        <select class="form-select" name="BetType">
                            <option value="">No Change</option>
                            @foreach (var betType in Enum.GetValues(typeof(SportsBettingTracker.Models.BetType)))
                            {
                                <option value="@betType">@betType</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Visibility</label>
                        <select class="form-select" name="IsPublic">
                            <option value="">No Change</option>
                            <option value="true">Public</option>
                            <option value="false">Private</option>
                        </select>
                        <small class="form-text text-muted">Public bets are visible to your followers</small>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="bulkEditConfirm">Save Changes</button>
            </div>
        </div>
    </div>
</div>

<!-- Bulk Delete Confirmation Modal -->
<div class="modal fade" id="bulkDeleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete the selected bets? This action cannot be undone.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="bulkDeleteConfirm">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
    $(document).ready(function() {
        // Handle "Select All" checkbox
        $('.select-all').change(function() {
            $('.select-bet').prop('checked', $(this).prop('checked'));
            updateBulkActionsVisibility();
        });

        // Handle individual checkboxes
        $('.select-bet').change(function() {
            updateBulkActionsVisibility();
            // If not all checkboxes are checked, uncheck "Select All"
            if (!$(this).prop('checked')) {
                $('.select-all').prop('checked', false);
            }
        });

        // Show/hide bulk actions based on selection
        function updateBulkActionsVisibility() {
            if ($('.select-bet:checked').length > 0) {
                $('.bulk-actions').removeClass('d-none');
            } else {
                $('.bulk-actions').addClass('d-none');
            }
        }

        // Handle bulk edit button click
        $('.bulk-edit').click(function() {
            $('#bulkEditModal').modal('show');        });

        // Handle clear filters button click
        $('#clearFilters').click(function() {
            // Reset all filter inputs
            $('select[name="dateFilter"]').val('');
            $('select[name="sportFilter"]').val('');
            $('select[name="betTypeFilter"]').val('');
            $('select[name="resultFilter"]').val('');
            $('input[name="searchString"]').val('');
            $('select[name="pageSize"]').val('10');
            
            // Submit the form
            $('#filterForm').submit();
        });

        // Handle bulk delete button click
        $('.bulk-delete').click(function() {
            $('#bulkDeleteModal').modal('show');
        });

        // Handle bulk edit confirmation
        $('#bulkEditConfirm').click(function() {
            var selectedIds = $('.select-bet:checked').map(function() {
                return parseInt($(this).val());
            }).get();            var formData = {
                ids: selectedIds,
                result: $('#bulkEditForm select[name="Result"]').val(),
                sportLeagueId: $('#bulkEditForm select[name="SportLeagueId"]').val(),
                betType: $('#bulkEditForm select[name="BetType"]').val(),
                isPublic: $('#bulkEditForm select[name="IsPublic"]').val() === "" ? null : 
                          $('#bulkEditForm select[name="IsPublic"]').val() === "true"
            };

            $.ajax({
                url: '@Url.Action("BulkEdit")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        location.reload();
                    } else {
                        alert('Error: ' + response.message);
                    }
                },
                error: function() {
                    alert('An error occurred while processing your request.');
                }
            });
        });

        // Handle bulk delete confirmation
        $('#bulkDeleteConfirm').click(function() {
            var selectedIds = $('.select-bet:checked').map(function() {
                return parseInt($(this).val());
            }).get();

            $.ajax({
                url: '@Url.Action("BulkDelete")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(selectedIds),
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        location.reload();
                    } else {
                        alert('Error: ' + response.message);
                    }
                },
                error: function() {
                    alert('An error occurred while processing your request.');
                }
            });
        });

        // Initialize tooltips
        $('[data-toggle="tooltip"]').tooltip();
    });
    </script>
}
